# SQL Matic Configuration

# Application settings
app:
  name: "SQL Matic"
  port: 8000
  debug: true
  environment: "development"

# Database settings for application
database:
  path: "sample.db"
  pool_size: 5
  timeout: 30
  type: sqlite

# Query Database settings
query_db:
  path: "/Users/anursen/Documents/sql_matic2/user_files/sakila.db"  
  max_rows_return: 200
  timeout: 30
  enable_write: false  # Whether to allow write operations
  allowed_tables: []  # Empty list means all tables
  excluded_tables: []  # Tables to exclude from queries
  cache_schema: true
  cache_duration: 3600  # Cache duration in seconds

# API settings
api:
  prefix: /api
  version: v1

# CORS settings
cors:
  origins: ["*"]
  credentials: true
  methods: ["*"]
  headers: ["*"]

# Logging configuration
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "[%(asctime)s] [%(levelname)s] [%(name)s] %(message)s"
  file: "tools/app.log"  # Centralized log location
  max_size: 10485760  # 10MB in bytes
  backup_count: 5
  console: true  # Whether to output logs to console

# Agent settings
agent:
  default_type: "sql"  # Default agent type to use
  common:
    timeout: 60
    retries: 3
  types:
    sql:  # SQL query generation agent
      provider: "openai"
      model: "gpt-4o-mini"
      temperature: 0.0
      max_tokens: 16384
      query_prefix: "-- This query was generated by SQL Matic\n"
      max_iterations: 3  # Maximum number of query refinement iterations
      system_message: |
        You are a SQL assistant that helps users query databases.
        You can use the following tools:
        1. get_schema: Get database structure
        2. execute_sql_query: Run SQL queries
        3. get_data_dictionary: Get data dictionary.
        Check the produced sql query for correctness. And fix if not working.
        Always provide accurate and concise information.
        Always provide the sql statement that you used to get the data with the result.
        Sample Response:
        Answer : .......
        Used SQL: ......
        Send your messages with markdown code blocks.
        Use /n to separate lines in your response.
      tools:
        - sqlite_execute_query
        - sqlite_get_schema
        - sqlite_get_metadata
    evaluator:  # Query evaluation and analysis agent
      provider: "openai"
      model: "gpt-4o-mini"
      temperature: 0.0
      max_tokens: 2500
      system_message: |
        You are a SQL assistant that helps users query databases.
        You can use the following tools:
        1. get_schema: Get database structure
        2. execute_sql_query: Run SQL queries
        3. get_data_dictionary: Get data dictionary.
        Check the produced sql query for correctness. And fix if not working.
        Always provide accurate and concise information.
        Always provide the sql statement that you used to get the data with the result.
        Sample Response:
        Answer : .......
        Used SQL: ......
        Send your messages with markdown code blocks.
        Use /n to separate lines in your response.
      tools:
        - sqlite_execute_query
        - sqlite_get_schema
        - sqlite_get_metadata

# Security settings
security:
  secret_key: placeholder_replace_in_production
  token_expiration: 86400  # 24 hours in seconds
  algorithm: HS256

# Storage settings
storage:
  user_files_dir: user_files
  max_upload_size: 104857600  # 100MB
  allowed_extensions:
    - .db
    - .sqlite
    - .sqlite3
